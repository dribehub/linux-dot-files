#!/bin/sh

cd $HOME/Repos/dot-files

l_HOME=home/dribe
l_CONF=home/dribe/.config
rsync -a /usr/share/fonts                       usr/share/
rsync -a ~/Scripts                              $l_HOME/
rsync -a ~/.zshrc                               $l_HOME/
rsync -a ~/.zshenv                              $l_HOME/
rsync -a ~/.zsh/aliases.zsh                     $l_HOME/.zsh/
rsync -a ~/.zsh/cli-commands.sh                 $l_HOME/.zsh/
rsync -a ~/.zsh/functions.zsh                   $l_HOME/.zsh/
rsync -a ~/.oh-my-zsh/completions/              $l_HOME/.oh-my-zsh/
rsync -a ~/.Xresources                          $l_HOME/
rsync -a ~/.vimrc                               $l_HOME/
rsync -a ~/.config/nvim                         $l_CONF/
rsync -a ~/.config/vimium                       $l_CONF/
rsync -a ~/.config/rofi                         $l_CONF/
rsync -a ~/.config/polybar                      $l_CONF/
rsync -a ~/.config/awesome                      $l_CONF/
rsync -a ~/.config/gtk-3.0/settings.ini         $l_CONF/gtk-3.0/
rsync -a ~/.config/spicetify/config-xpui.ini    $l_CONF/spicetify/
rsync -a ~/.config/neofetch/config.conf         $l_CONF/neofetch/

# ansi codes
col0="\e[0;39m"     # normal
col1="\e[32m"       # green
col2="\e[1;32m"     # bold green
col3="\e[1;31m"     # bold red

########## git prompt menu ##########

# add all changes locally
git add .

# catch -m option and avoid git prompt menu
if  [[ $1 = "-m" ]]; then
    shift
    git status &&
    git commit -am "${@}" &&
    git push &&
    exit 0 || exit 1
fi

opt=0
while [[ $opt != [nN6] && $opt != 'push' ]]; do
    echo -e "${col1}1${col0}) ${col2}log ${col0}commit history"
    echo -e "${col1}2${col0}) ${col0}show ${col2}diff${col0}erences"
    echo -e "${col1}3${col0}) ${col2}show ${col0}last commit"
    echo -e "${col1}4${col0}) ${col0}show git ${col2}status${col0}"
    echo -e "${col1}5${col0}) ${col2}commit ${col0}latest changes"
    echo -e "${col1}6${col0}) ${col2}push ${col0}latest commits"
    echo -ne "${col2}n${col0}/${col2}N ${col0}to cancel: ${col2}"
    read opt && echo -e "${col0}";
    case $opt in
        1|log) git log;;
        2|diff) git diff HEAD;;
        3|show) git show;;
        4|status) git status;;
        5|commit) echo -ne "Enter commit message: ${col2}" &&
            read msg && 
            echo -ne "${col0}" &&
            git commit -am "${msg}" && 
            echo '';;
        6|push) git push;;
        n|N) continue;;
        *) echo -e "${col3}Invalid option!${col0}";
    esac
done

